# shellcheck shell=sh

# While most shells support `local`, it technically isn't POSIX. This will check
# for `local` and alias it to `typeset` if it doesn't exist.
# shellcheck disable=SC3043
#            If a shell does not support `local`, it will be aliased to
#            `typeset`, so this check is not needed.
has_local() {
  local _has_local
}
has_local 2>/dev/null || alias local=typeset

################################################################################
## Utility Functions
################################################################################

# Check if a command exists
check_cmd() {
  command -v "$1" >/dev/null 2>&1
}

## User name
################################################################################
## If $USER is some long@username.institution.edu, define $SUSER to be the part
## before the '@' (or leave it unchanged if there is no '@').
export SUSER="${USER%@*}"

## Load Brew
################################################################################
if [ -x /opt/homebrew/bin/brew ]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
  export DYLD_FALLBACK_LIBRARY_PATH="$HOMEBREW_PREFIX/lib"
fi

## Temporary directory
################################################################################
## Remove trailing slash from $TMPDIR if present
export TMPDIR="${TMPDIR%/}"

## If $TMPDIR is unset, set it to /tmp/$SUSER
if [ -z "$TMPDIR" ]; then
  export TMPDIR="/tmp/$SUSER"
fi

## On macOS, the default TMPDIR is /var/folders/... which is too long for
## sockets. If TMPDIR is the default, set it to /tmp/$SUSER
case "$(uname -s)::$TMPDIR" in
Darwin::/var/folders/*)
  export TMPDIR="/tmp/$SUSER"
  ;;
esac

## Make sure that $TMPDIR ends with $SUSER
if [ "${TMPDIR%"$SUSER"}" = "$TMPDIR" ]; then
  export TMPDIR="$TMPDIR/$SUSER"
fi

## Ensure $TMPDIR is only readable to the current user
# shellcheck disable=SC2174
mkdir -p -m 700 "$TMPDIR"
# Only set the group if the current user has a group
case "$(groups)" in
*$USER*)
  chown "$USER:$USER" "$TMPDIR"
  ;;
*)
  chown "$USER:$(id -gn)" "$TMPDIR"
  ;;
esac
chmod 700 "$TMPDIR"

if check_cmd setfacl; then
  setfacl -m "user:${USER}:rwx,group::---,mask::---,other::---" "$TMPDIR"
fi

## SSH Socket from GPG Agent
################################################################################

if [ -z "$SSH_AUTH_SOCK" ] && check_cmd gpgconf; then
  SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
  export SSH_AUTH_SOCK
fi

## Load environment variables from .config/environment.d
################################################################################
# Pending on the outcome of https://github.com/systemd/systemd/issues/7641
if [ -d "$HOME/.config/environment.d" ]; then
  set -o allexport
  if [ -x /usr/lib/systemd/user-environment-generators/30-systemd-environment-d-generator ]; then
    eval "$(systemctl --user show-environment | rg -v '^PATH=')"
  else
    for conf in "$HOME/.config/environment.d"/*.conf; do
      # shellcheck disable=SC1090
      . "$conf"
    done
  fi
  set +o allexport
fi

## Paths
################################################################################

add_path() {
  if [ $# -ne 2 ] && [ $# -ne 3 ]; then
    echo "add_path PATH_VAR PATH [append]" >&2
    return
  fi

  p="${2%/}"
  expanded=$(eval echo "\$$1")

  case "$expanded" in
  *"$p"*)
    # Path already present, do nothing
    ;;
  "")
    # Empty path var, initialize it
    eval export "$1"="$p"
    ;;
  *)
    # Prepend by default, unless specified to append
    if [ -z "$3" ]; then
      eval export "$1"="$p:$expanded"
    else
      eval export "$1"="$expanded:$p"
    fi
    ;;
  esac
}

for dir in "$HOME/.local" "/scratch/$USER/local" "/scratch/$SUSER/local" "$CARGO_HOME" "$HOME/.jenv/bin"; do
  if [ -d "$dir/bin" ]; then
    add_path PATH "$dir/bin"
  fi
  if [ -d "$dir/lib" ]; then
    add_path LD_LIBRARY_PATH "$dir/lib"
  fi
done

for bindir in "$PNPM_HOME" ; do
  if [ -d "$bindir" ]; then
    add_path PATH "$bindir"
  fi
done

## Load environment variables into DBus and systemd
################################################################################
case "$(uname -s)" in
Darwin)
  if check_cmd launchctl; then
    launchctl setenv SSH_AUTH_SOCK "$SSH_AUTH_SOCK"
  fi
  ;;
Linux)
  if check_cmd dbus-update-activation-environment; then
    dbus-update-activation-environment --systemd SSH_AUTH_SOCK
  fi
  ;;
esac

## Node Version Manager
################################################################################
if [ -s "/opt/homebrew/opt/nvm/nvm.sh" ]; then
  . "/opt/homebrew/opt/nvm/nvm.sh"
fi

## Java Version Manager
################################################################################
if check_cmd jenv; then
  eval "$(jenv init -)"
fi

## Podman and Docker
################################################################################
## If podman is installed and docker is not, alias docker to podman
if check_cmd podman && ! check_cmd docker; then
  alias docker=podman
  DOCKER_HOST="$(podman machine inspect --format '{{.ConnectionInfo.PodmanSocket.Path}}')"
  export DOCKER_HOST
fi
if check_cmd podman-compose && ! check_cmd docker-compose; then
  alias docker-compose=podman-compose
fi

## Customizations
################################################################################
