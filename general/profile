#!/bin/sh

## User name
################################################################################
## If $USER is some long@username.institution.edu, define $SUSER to be the part
## before the '@' (or leave it unchanged if there is no '@').
export SUSER="${USER%@*}"


## Load Brew
################################################################################
if [ -x /opt/homebrew/bin/brew ] ; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

## Temporary directory
################################################################################
## Remove trailing slash from $TMPDIR if present
export TMPDIR="${TMPDIR%/}"

## If $TMPDIR is unset, set it to /tmp/$SUSER
if [ -z "$TMPDIR" ] ; then
  export TMPDIR="/tmp/$SUSER"
fi

## Make sure that $TMPDIR ends with $SUSER
if [ "${TMPDIR%"$SUSER"}" = "$TMPDIR" ] ; then
  export TMPDIR="$TMPDIR/$SUSER"
fi

## Ensure $TMPDIR is only readable to the current user
# shellcheck disable=SC2174
mkdir -p -m 700 "$TMPDIR"
# Only set the group if the current user has a group
case "$(groups)" in
  *$USER*)
    chown "$USER:$USER" "$TMPDIR"
    ;;
  *)
    chown "$USER:$(id -gn)" "$TMPDIR"
    ;;
esac
chmod 700 "$TMPDIR"

if command -v setfacl 1>/dev/null 2>&1 ; then
  setfacl -m "user:${USER}:rwx,group::---,mask::---,other::---" "$TMPDIR"
fi


## SSH Socket from GPG Agent
################################################################################

if [ -z "$SSH_AUTH_SOCK" ] && command -v gpgconf 1>/dev/null 2>&1 ; then
  SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
  export SSH_AUTH_SOCK
fi


## Load environment variables from .config/environment.d
################################################################################
# Pending on the outcome of https://github.com/systemd/systemd/issues/7641
if [ -d "$HOME/.config/environment.d" ]; then
  set -o allexport
  if [ -x /usr/lib/systemd/user-environment-generators/30-systemd-environment-d-generator ]; then
    eval "$(systemctl --user show-environment | rg -v '^PATH=')"
  else
    for conf in "$HOME/.config/environment.d"/*.conf ; do
      # shellcheck disable=SC1090
      . "$conf"
    done
  fi
  set +o allexport
fi


## Paths
################################################################################

add_path() {
  if [ $# -ne 2 ] && [ $# -ne 3 ]; then
    echo "add_path PATH_VAR PATH [append]" >&2
    return
  fi

  p="${2%/}"
  expanded=$(eval echo "\$$1")

  case "$expanded" in
    *"$p"*)
      # Path already present, do nothing
      ;;
    "")
      # Empty path var, initialize it
      eval export "$1"="$p"
      ;;
    *)
      # Prepend by default, unless specified to append
      if [ -z "$3" ]; then
        eval export "$1"="$p:$expanded"
      else
        eval export "$1"="$expanded:$p"
      fi
      ;;
  esac
}

for dir in "$HOME/.local" "/scratch/$USER/local" "/scratch/$SUSER/local" "$CARGO_HOME" "$HOME/.jenv/bin"; do
  if [ -d "$dir/bin" ]; then
    add_path PATH "$dir/bin"
  fi
  if [ -d "$dir/lib" ]; then
    add_path LD_LIBRARY_PATH "$dir/lib"
  fi
done


## Load environment variables into DBus and systemd
################################################################################
case "$(uname -s)" in
  Darwin)
    if command -v launchctl 1>/dev/null 2>&1 ; then
      launchctl setenv SSH_AUTH_SOCK "$SSH_AUTH_SOCK"
    fi
    ;;
  Linux)
    if command -v dbus-update-activation-environment 1>/dev/null 2>&1 ; then
      dbus-update-activation-environment --systemd SSH_AUTH_SOCK
    fi
    ;;
esac

## Node Version Manager
################################################################################
if [ -s "/opt/homebrew/opt/nvm/nvm.sh" ] ; then
  . "/opt/homebrew/opt/nvm/nvm.sh"
fi

## Java Version Manager
################################################################################
if command -v jenv 1>/dev/null 2>&1 ; then
  eval "$(jenv init -)"
fi

## Podman and Docker
################################################################################
## If podman is installed and docker is not, alias docker to podman
if command -v podman 1>/dev/null 2>&1 && ! command -v docker 1>/dev/null 2>&1 ; then
  alias docker=podman
fi
if command -v podman-compose 1>/dev/null 2>&1 && ! command -v docker-compose 1>/dev/null 2>&1 ; then
  alias docker-compose=podman-compose
fi

## Customizations
################################################################################
