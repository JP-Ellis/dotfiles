#!/bin/zsh

setopt NULL_GLOB

help () {
    echo "Usage: $1"
    echo "Setup all the files into the appropriate locations."
    echo ""
    echo "The setup script will prompt you to setup the various components.  In"
    echo "every case, if a file or directory already exists a backup will be"
    echo "made with the extension \`.bak.$RANDOM\`."
}

if [ $# -gt 0 ]; then
    help $0
    exit 1
fi

source "${0:A:h}/local/share/yes-or-no.zsh"
source "${0:A:h}/local/share/print-help.zsh"

make_backup() {
    if [ $# -ne 1 ]; then
        error "$0 requires exactly one argument."
        exit 1
    fi
    if [ -e "$1" ]; then
        local backup="$1.bak.$RANDOM"
        msg "Moving ${1:t} -> ${backup:t}"
        mv "$1" "$backup"
    fi
}

make_link() {
    if [ $# -ne 2 ]; then
        echo "$0 requires exactly two arguments." >&2
        exit 1
    fi
    make_backup "$2"
    msg "Linking ${1:t} -> $2"
    ln -s "$1" "$2"
}

## Link files and directories
################################################################################

ROOT_DIR="${0:A:h}"

title "Files in ~/."
## Files in the home directory
for f in $ROOT_DIR/home/* $ROOT_DIR/home/.*; do
    yes_or_no "Link ${f#$ROOT_DIR/} into the home directory?" Y || continue
    make_link "${f:A}" "$HOME/${f:t}"
done

printf '\n'

title "Files in ~/.config"
mkdir -p "$HOME/.config"
for f in $ROOT_DIR/config/* $ROOT_DIR/config/.*; do
    yes_or_no "Link ${f#$ROOT_DIR/} into the .config directory?" Y || continue
    make_link "${f:A}" "$HOME/.config/${f:t}"
done

printf '\n'

title "Files in ~/.local/share"
mkdir -p "$HOME/.local/share"
for f in $ROOT_DIR/local/share/* $ROOT_DIR/bin/.* ; do
    yes_or_no "Link ${f#$ROOT_DIR/} into .local/bin" Y || continue
    make_link "${f:A}" "$HOME/.local/share/${f:t}"
done

printf '\n'

title "Files in ~/.local/bin"
mkdir -p "$HOME/.local/bin"
for f in $ROOT_DIR/local/bin/* $ROOT_DIR/bin/.* ; do
    yes_or_no "Link ${f#$ROOT_DIR/} into .local/bin" Y || continue
    make_link "${f:A}" "$HOME/.local/bin/${f:t}"
done

printf '\n'

## ZSH
################################################################################

title "Zprezto"
if yes_or_no "Setup Zprezto?" N; then
    # Clone (or update) ZSH
    if [[ ! -d "$HOME/.zprezto" ]]; then
        echo "Cloning zprezto"
        git clone --recursive https://github.com/sorin-ionescu/prezto.git "${ZDOTDIR:-$HOME}/.zprezto"
        ln -fvs "$ROOT_DIR/prompt_jpellis_setup" "${ZDOTDIR:-$HOME}/.zprezto/modules/prompt/functions/prompt_jpellis_setup"
    fi
    git -C "${ZDOTDIR:-$HOME}/.zprezto" pull
    git -C "${ZDOTDIR:-$HOME}/.zprezto" submodule update --init --recursive
fi

printf '\n'

title "Zplugin"
if yes_or_no "Setup Zplugin?" Y; then
    mkdir -p ~/.zplugin
    if [[ ! -d "$HOME/.zplugin/bin" ]]; then
        git clone https://github.com/zdharma/zplugin.git ~/.zplugin/bin
    fi
fi

## Spacemacs
################################################################################

title "Spacemacs"
if yes_or_no "Setup Spacemacs?" Y; then
    # Clone spacemacs if it hasn't been done already.
    if [ ! -d "$HOME/.emacs.d" ]; then
        git clone --branch develop https://github.com/syl20bnr/spacemacs "$HOME/.emacs.d"
    else
        make_backup "$HOME/.emacs.d"
        git clone --branch develop https://github.com/syl20bnr/spacemacs ~/.emacs.d
    fi
fi

printf '\n'
