################################################################################
## Executes commands at the start of an interactive session.
################################################################################

# Load ZSH options
# source ~/.zshopts

# Load completions
if (( $+commands[brew] )) && [[ -d "$(brew --prefix)/share/zsh/site-functions" ]]; then
  chmod go-w "$(brew --prefix)/share"
  chmod go-w "$(brew --prefix)/share/zsh"
  chmod -R go-w "$(brew --prefix)/share/zsh/site-functions"
  fpath=(
    "$(brew --prefix)/share/zsh-functions"
    $fpath
  )
fi

autoload -Uz compinit
compinit

# Load profile
if [[ -e "$HOME/.profile" ]]; then
  source "$HOME/.profile"
fi

# Load zoxide
if (( $+commands[zoxide] )); then
  eval "$(zoxide init zsh)"
fi

# Load direnv
if (( $+commands[direnv] )); then
  eval "$(direnv hook zsh)"
fi

# Load github-copilot-cli
if (( $+commands[github-copilot-cli] )); then
  eval "$(github-copilot-cli alias -- "$0")"
fi

# Load Sheldon
if (( $+commands[sheldon] )); then
  export ENHANCD_FILTER=fzf:fzy
  export ENHANCD_HOOK_AFTER_CD=ls
  zstyle ':autocomplete:*' recent-dirs zoxide # Use zoxide for recent directories
  zstyle ':autocomplete:*' insert-unambiguous yes # Insert substring common to all listed completions, if any
  zstyle ':autocomplete:*' widget-style menu-select # The manner in which completions are selected
  zstyle ':autocomplete:*' fzf-completion yes

  eval "$(sheldon source)"
fi

## ZSH Preferences
################################################################################
## The options below are documented in https://zsh.sourceforge.io/Doc/Release/Options.html

## Use Emacs key bindings
bindkey -v

## Enable history
HISTFILE="$HOME/.cache/zsh_history"
HISTSIZE=1000000
SAVEHIST=1000000

# Set shell options: http://zsh.sourceforge.net/Doc/Release/Options.html.
setopt bang_hist
setopt extended_history
setopt hist_allow_clobber
setopt hist_expire_dups_first
setopt hist_fcntl_lock
setopt hist_ignore_all_dups
setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_lex_words
setopt hist_save_by_copy
setopt hist_save_no_dups
setopt hist_verify
setopt inc_append_history_time

## Confirm before overwriting output files
setopt no_clobber

## Completion preferences
setopt complete_in_word
setopt glob_complete
setopt menu_complete
setopt glob_dots # no special treatment for file names with a leading dot
setopt auto_menu
setopt auto_cd

# zstyle ':completion:*' auto-description 'Specify %d'
zstyle ':completion:*' completer _list _oldlist _expand _complete _ignored _match _correct _approximate _prefix
# zstyle ':completion:*' completions 1
# zstyle ':completion:*' expand prefix suffix
# zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' glob 1
# zstyle ':completion:*' group-name ''
zstyle ':completion:*' ignore-parents parent pwd .. directory
zstyle ':completion:*' list-suffixes true
zstyle ':completion:*' match-original both
# zstyle ':completion:*' max-errors 2
# zstyle ':completion:*' preserve-prefix '//[^/]##/'
# zstyle ':completion:*' prompt 'Corrections'
zstyle ':completion:*' squeeze-slashes true
zstyle ':completion:*' substitute 1
zstyle ':completion:*' use-compctl true
zstyle ':completion:*' verbose true

## Commands
################################################################################

## Shorten `xdg-open` to just `open`, and if given multiple arguments open each
## of them individually.
open() {
  local arg
  for arg in "$@"; do
    xdg-open "$arg"
  done
}

## ls substitution
if (( $+commands[eza] )); then
  alias ls='eza --group-directories-first --git --binary' # default
  alias li='ls --git-ignore'                              # use gitignore
  alias l='ls --oneline --all'                            # list for parsing
  alias ll='ls --long --header'                           # default with a bit more
  alias lr='ll --tree'                                    # recurse
  alias la='ll --all'                                     # show all
  alias lx='ll --sort=extension'                          # sort by e_x_tension
  alias lb='ll --sort=size'                               # sort by _b_ytes
  alias lc='ll --sort=created --time=created'             # sort by _c_reation date
  alias lm='ll --sort=modified --time=modified'           # sort by _m_odification date
  alias lt='lm'                                           # sort by (modification) _t_ime
  alias sl=ls                                             # typo fix
else
  alias ls='ls --group-directories-first --color=auto' # default
  alias l='ls -1 --almost-all'                         # list for parsing
  alias ll='ls -l --human-readable'                    # default with a bit more
  alias lr='ll --recursive'                            # recurse
  alias la='ll --almost-all'                           # show all
  alias lx='ll --sort=extension'                       # sort by e_x_tension
  alias lb='ll --sort=size'                            # sort by _b_ytes
  alias lc='ll --sort=time --time=created'             # sort by _c_reation date
  alias lm='ll --sort=time --time=modified'            # sort by _m_odification date
  alias lt='lm'                                        # sort by (modification) _t_ime
  alias sl=ls                                          # typo fix
fi

## Run ls after entering a directory
# cd() {
#   builtin cd "$1" && ls
# }

## Shortcut to make and cd into a new directory
mkcd() {
  mkdir "$1" && cd "$1"
}

## Use bat to format man page
if (( $+commands[bat] )); then
  export MANPAGER="sh -c 'col -bx | bat -l man -p'"
fi

# Load starship
if (( $+commands[starship] )); then
  eval "$(starship init zsh)"
fi
