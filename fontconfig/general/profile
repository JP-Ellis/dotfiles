#!/bin/sh

## User name
################################################################################
## If $USER is some long.username@institution.edu, define $SUSER to be the part
## before the '@' (or leave it unchanged if there is no '@').
export SUSER="${USER%@*}"


## Temporary directory
################################################################################
## Remove trailing slash from $TMPDIR if present
export TMPDIR="${TMPDIR%/}"

## If $TMPDIR is unset, set it to /tmp/$SUSER
if [ -z "$TMPDIR" ] ; then
  export TMPDIR="/tmp/$SUSER"
fi

## Make sure that $TMPDIR ends with $SUSER
if [ "${TMPDIR%$SUSER}" = "$TMPDIR" ] ; then
  export TMPDIR="$TMPDIR/$SUSER"
fi

## Ensure $TMPDIR is only readable to the current user
mkdir -p -m 700 "$TMPDIR"
chown "$USER" "$TMPDIR"
chmod 700 "$TMPDIR"


## Paths
################################################################################

## Update the given PATH variable by adding the specified path.  If the third
## argument is not blank, the path is appended instead of the prepended.
add_path() {
  if [ $# -lt 2 -o $# -gt 3 ]; then
    echo "add_path PATH_VAR path [append]" >&2
    return
  fi

  local p
  p="${2%/}"

  case "${!1}" in
    *"$p"*)
      # Path is already present
      ;;
    "")
      # Path is empty are we are adding to it
      export "$1"="$p"
      ;;
    *)
      # Prepend / append to path
      if [ -z "$3" ]; then
        export "$1"="$p:${!1}"
      else
        export "$1"="${!1}:$p"
      fi
      ;;
  esac
}

for dir in "$HOME/.local" "/scratch/$USER/local" "/scratch/$SUSER/local" "$TMPDIR/local"; do
  if [ -d "$dir/bin" ]; then
    add_path PATH "$dir/bin"
  fi
  if [ -d "$dir/bin" ]; then
    add_path LD_LIBRARY_PATH "$dir/lib"
  fi
done


## Interactive Shell
################################################################################
# Last couple of things to check when we have an interactive shell
case $- in
  *i*)
    # Give a warning if $TMPDIR might be readable to other users
    if [ \
       $(( $(stat --printf='%a' $TMPDIR) % 1000 )) != 700 \
       -o "$(id -u)" -ne "$(stat --printf='%u' $TMPDIR)" \
       -o "$(id -g)" -ne "$(stat --printf='%g' $TMPDIR)" \
       ] ; then
      echo "TMPDIR may be readable to others." >&2
    fi
    ;;
  *)
    ;;
esac


## Load environment variables from .config/environment.d if needed
################################################################################
# Pending on the outcome of https://github.com/systemd/systemd/issues/7641
if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
  SESSION_TYPE=remote/ssh
else
  case $(ps -o comm= -p $PPID) in
    sshd|*/sshd) SESSION_TYPE=remote/ssh;;
  esac
fi

if [ "$SESSION_TYPE" = "remote/ssh" -a -d "$HOME/.config/environment.d" ]; then
  set -o allexport
  for conf in $(ls "$HOME/.config/environment.d"/*.conf); do
    source "$conf"
  done
  set +o allexport
fi

## GPG SSH agent
################################################################################
if command -v gpgconf 2>&1 1>/dev/null ; then
  socket=$(gpgconf --list-dirs agent-ssh-socket)
  if [ ! -z "$socket" ]; then
    export SSH_AUTH_SOCK="$socket"
  fi
fi

## Customizations
################################################################################
